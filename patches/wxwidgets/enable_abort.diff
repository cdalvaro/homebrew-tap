diff --git a/include/wx/generic/progdlgg.h b/include/wx/generic/progdlgg.h
index ba8fb0bcc5198affee86b47a0d5342457607c1b2..f14b5909c0ccf8eaf0705ea9e48d6659942e7148 100644
--- a/include/wx/generic/progdlgg.h
+++ b/include/wx/generic/progdlgg.h
@@ -174,7 +174,9 @@ private:
     // shortcuts for enabling buttons
     void EnableClose();
     void EnableSkip(bool enable = true);
-    void EnableAbort(bool enable = true);
+public:
+    virtual void EnableAbort(bool enable = true);
+private:
     void DisableSkip() { EnableSkip(false); }
     void DisableAbort() { EnableAbort(false); }

diff --git a/include/wx/msw/progdlg.h b/include/wx/msw/progdlg.h
index c22a79db91ba210fcc7329c3be4f3ad34287ca8b..dcd201aaef0b98653a0c853962032ee1277d2379 100644
--- a/include/wx/msw/progdlg.h
+++ b/include/wx/msw/progdlg.h
@@ -54,6 +54,8 @@ public:

     virtual WXWidget GetHandle() const wxOVERRIDE;

+    virtual void EnableAbort(bool enable = true) wxOVERRIDE;
+
 private:
     // Common part of Update() and Pulse().
     //
diff --git a/interface/wx/progdlg.h b/interface/wx/progdlg.h
index 28ce778ed61d85bf7aae59e6a3d44290b54dd7c2..e0ada14805f1fe9f80b91994fc0b12d14ae65a5b 100644
--- a/interface/wx/progdlg.h
+++ b/interface/wx/progdlg.h
@@ -243,6 +243,14 @@ public:
     */
     virtual bool Update(int value, const wxString& newmsg = wxEmptyString,
                         bool* skip = NULL);
+
+    /**
+        Enables or disables de cancel/abort button
+
+        @param enable
+            True then the progress dialog can be cancelled, false otherwise
+    */
+    virtual void EnableAbort(bool enable = true);
 };


diff --git a/src/msw/progdlg.cpp b/src/msw/progdlg.cpp
index 8525a85dba2b2881e8d7e76a994117a7e4718afd..9c4572b4cf23457df29a54f3884b274322e62edd 100644
--- a/src/msw/progdlg.cpp
+++ b/src/msw/progdlg.cpp
@@ -761,6 +761,18 @@ bool wxProgressDialog::WasCancelled() const
     return wxGenericProgressDialog::WasCancelled();
 }

+void wxProgressDialog::EnableAbort(bool enable) {
+#ifdef wxHAS_MSW_TASKDIALOG
+    if ( HasNativeTaskDialog() )
+    {
+        wxCriticalSectionLocker locker(m_sharedData->m_cs);
+        if ( !(sharedData->m_style & wxPD_CAN_ABORT) )
+            EnableCloseButtons(m_sharedData->m_hwnd, enable);
+    }
+#endif // wxHAS_MSW_TASKDIALOG
+    wxGenericProgressDialog::EnableAbort(enable);
+}
+
 void wxProgressDialog::SetTitle(const wxString& title)
 {
 #ifdef wxHAS_MSW_TASKDIALOG
